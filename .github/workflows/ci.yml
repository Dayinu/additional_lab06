name: CMake Build

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        choco install mingw -y --version 12.2.0 --no-progress
        choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System' --no-progress
        
        if (-not (Test-Path C:/SFML-2.5.1)) {
            Invoke-WebRequest -Uri "https://github.com/SFML/SFML/releases/download/2.5.1/SFML-2.5.1-windows-gcc-7.3.0-mingw-64-bit.zip" -OutFile "sfml.zip"
            Expand-Archive -Path sfml.zip -DestinationPath C:/
        }
        echo "C:\SFML-2.5.1\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Configure CMake
      run: |
        cmake -S . -B build -G "MinGW Makefiles" -DSFML_DIR="C:/SFML-2.5.1/lib/cmake/SFML"
        
    - name: Build
      run: |
        cmake --build build --config Release --parallel
        
    - name: Copy essential DLLs
      run: |
        # Обязательные DLL из MinGW
        $mingwPath = "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin"
        $essentialDlls = "libgcc_s_seh-1.dll", "libstdc++-6.dll", "libwinpthread-1.dll"
        foreach ($dll in $essentialDlls) {
            Copy-Item "$mingwPath\$dll" -Destination "build/"
        }
        
        # Все DLL из SFML
        Copy-Item "C:/SFML-2.5.1/bin/*.dll" -Destination "build/"
        
    - name: Install OpenAL
      run: |
        # Исправленная установка OpenAL
        $openalUrl = "https://github.com/kcat/openal-soft/releases/download/1.23.1/openal-soft-1.23.1-bin.zip"
        Invoke-WebRequest -Uri $openalUrl -OutFile "openal.zip"
        Expand-Archive -Path openal.zip -DestinationPath openal_tmp
        Copy-Item "openal_tmp/x64/soft_oal.dll" -Destination "build/openal32.dll"
        
    - name: Verify DLLs
      run: |
        echo "Essential DLLs:"
        ls build/*.dll
        
    - name: Run executable
      run: |
        cd build
        .\arkanoid.exe
