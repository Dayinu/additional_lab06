name: CMake Build

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        choco install mingw -y --version 8.1.0
        choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'
        Invoke-WebRequest -Uri "https://github.com/SFML/SFML/releases/download/2.5.1/SFML-2.5.1-windows-gcc-7.3.0-mingw-64-bit.zip" -OutFile "sfml.zip"
        Expand-Archive -Path sfml.zip -DestinationPath C:/
        echo "C:\SFML-2.5.1\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Configure CMake
      run: |
        cmake -S . -B build -G "MinGW Makefiles" `
          -DSFML_DIR="C:/SFML-2.5.1/lib/cmake/SFML"
        
    - name: Build
      run: |
        cmake --build build --config Release -j 2
        
    - name: Copy DLLs
      run: |
        # 1. Копируем все DLL из SFML
        Copy-Item "C:/SFML-2.5.1/bin/*.dll" -Destination "build/"
        
        # 2. Автоматически находим путь к MinGW и копируем его DLL
        $mingwPath = (Get-ChildItem -Path "C:\ProgramData\chocolatey\lib\mingw" -Recurse -Filter "gcc.exe" | Select-Object -First 1).DirectoryName
        if ($mingwPath) {
            echo "Found MinGW at: $mingwPath"
            Copy-Item "$mingwPath\*.dll" -Destination "build/"
        } else {
            echo "::warning::MinGW path not found! Trying fallback..."
            Copy-Item "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin\*.dll" -Destination "build/"
        }
        
    - name: Verify DLLs
      run: |
        echo "Copied DLLs:"
        ls build/*.dll
        
    - name: Run executable with debug
      run: |
        # Добавляем вывод в консоль перед запуском
        echo "Current directory: $(Get-Location)"
        echo "Files in build directory:"
        ls build
        
        # Запускаем с диагностикой
        if (Test-Path build/arkanoid.exe) {
            cd build
            # Запускаем через отладчик GDB для получения трассировки
            $mingwPath = (Get-ChildItem -Path "C:\ProgramData\chocolatey\lib\mingw" -Recurse -Filter "gdb.exe" | Select-Object -First 1).DirectoryName
            if ($mingwPath) {
                & "$mingwPath\gdb.exe" -ex "set pagination off" -ex "run" -ex "bt" -ex "quit" --args .\arkanoid.exe
            } else {
                .\arkanoid.exe
            }
        } else {
            echo "::error::Executable not found!"
            Get-ChildItem -Path build -Recurse -Filter *.exe
            exit 1
        }
